name: CI

on:
  push:
    branches: [main, ci-*]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # The caching logic built into actions/setup-node cannot be used
      # since it was designed around the incorrect belief that
      # package-lock.json should be committed.
      - name: Use Node.js 12.x
        uses: actions/setup-node@v3
        with:
          node-version: 12.x
      - name: Compute dependencies
        run: npm install --package-lock-only
      - name: Get cache directory
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Load cached packages
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2

      # The caching logic built into actions/setup-node cannot be used
      # since it was designed around the incorrect belief that
      # package-lock.json should be committed.
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get cache directory
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Load cached packages
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm ci

      - name: Test the build
        run: npm run build
      - name: Run tests and generate coverage report
        run: npm test -- --coverage
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
